local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

    local NameScript = '[ üå± Grow a Garden]'
    

    local Window = Fluent:CreateWindow({
        Title = NameScript,
        SubTitle = "by wendelxz",
        TabWidth = 130,
        Size = UDim2.fromOffset(550, 330),
        Acrylic = false,
        Theme = "Amethyst",
        MinimizeKey = Enum.KeyCode.LeftControl
    })
   -- ===================== icon ===================== --
        local screenGui = Instance.new("ScreenGui")
        local minimizeButton = Instance.new("ImageButton")
        local buttonCorner = Instance.new("UICorner")

        -- ‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á ScreenGui
        screenGui.Name = "MobileMinimize"
        screenGui.Parent = game:GetService("CoreGui")
        screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

        -- ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á ImageButton (Minimize Button)
        minimizeButton.Parent = screenGui
        minimizeButton.BackgroundColor3 = Color3.new(1.000000, 1.000000, 1.000000)
        minimizeButton.BorderColor3 = Color3.new(1.000000, 1.000000, 1.000000)
        minimizeButton.BorderSizePixel = 0
        minimizeButton.Position = UDim2.new(0,584,0,14)

        -- ‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á‡∏õ‡∏∏‡πà‡∏°
        local originalSize = UDim2.new(0, 45, 0, 45)
        minimizeButton.Size = originalSize + UDim2.new(0, originalSize.X.Offset * 0.15, 0, originalSize.Y.Offset * 0.15)
        minimizeButton.Image = "rbxassetid://13118946357"

        -- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏°‡∏∏‡∏°‡πÇ‡∏Ñ‡πâ‡∏á‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°
        buttonCorner.CornerRadius = UDim.new(0.2, 0)
        buttonCorner.Parent = minimizeButton

        -- ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏•‡∏≤‡∏Å
        local dragging = false
        local dragInput, touchPos, buttonPos

        -- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏≤‡∏Å
        minimizeButton.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                dragging = true
                touchPos = input.Position
                buttonPos = minimizeButton.Position

                -- ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏•‡∏≤‡∏Å‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        dragging = false
                    end
                end)
            end
        end)

        -- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß‡∏Ç‡∏≠‡∏á‡πÄ‡∏°‡∏≤‡∏™‡πå/‡∏™‡∏±‡∏°‡∏ú‡∏±‡∏™
        minimizeButton.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                dragInput = input
            end
        end)

        -- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏≤‡∏Å‡∏õ‡∏∏‡πà‡∏°
        game:GetService("UserInputService").InputChanged:Connect(function(input)
            if input == dragInput and dragging then
                local delta = input.Position - touchPos
                minimizeButton.Position = UDim2.new(
                    buttonPos.X.Scale,
                    buttonPos.X.Offset + delta.X,
                    buttonPos.Y.Scale,
                    buttonPos.Y.Offset + delta.Y
                )
            end
        end)

        -- ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏à‡∏∞‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏¢‡πà‡∏≠
        minimizeButton.MouseButton1Click:Connect(function()
            Window:Minimize()
        end)
    -- ===================== icon ===================== --

    function ShowNotification(Content,SubContent)
        Fluent:Notify({
            Title = "WENDELXZ",
            Content = Content,
            SubContent = SubContent,
            Duration = 2.5
        })
    end

    --Fluent provides Lucide Icons https://lucide.dev/icons/ for the tabs, icons are optional
    local Tabs = {
        Main = Window:AddTab({ Title = "Farm", Icon = "gamepad-2" }),
        Trial = Window:AddTab({ Title = "Pet", Icon = "gem" }),
        Shop = Window:AddTab({ Title = "Shop", Icon = "gem" }),
        Teleport = Window:AddTab({ Title = "Teleport", Icon = "slack" }),
        Webhooks = Window:AddTab({ Title = "Webhook", Icon = "ghost" }),
        Miscellaneous = Window:AddTab({ Title = "Miscellaneous", Icon = "list-ordered" }),
        Tools = Window:AddTab({ Title = "Tools", Icon = "wrench" }),
        Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
    }

    local Options = Fluent.Options


Tabs.Teleport:AddSection("GEAR | EGGS")
Tabs.Teleport:AddButton({
    Title = "TP GEAR",
    Description = "",
    Callback = function()
        -- Apenas posi√ß√£o (sem virar o jogador)
        local teleportCFrame = CFrame.new(-286.15240478515625, 2.999999761581421, -13.778722763061523)

        local Players = game:GetService("Players")
        local player = Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()

        -- Espera o HumanoidRootPart
        local rootPart = character:WaitForChild("HumanoidRootPart")

        -- Faz o teleporte
        rootPart.CFrame = teleportCFrame

        -- (Opcional) Notifica√ß√£o de feedback
        ShowNotification("TP GEAR", "Teleported to Gear!")
    end
})

Tabs.Teleport:AddButton({
    Title = "TP EGGS",
    Description = "",
    Callback = function()
        -- CFrame apenas com posi√ß√£o (sem virar o jogador)
        local teleportCFrame = CFrame.new(-285.0691833496094, 12.999999761581421, 7.814676284790039)

        local Players = game:GetService("Players")
        local player = Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()

        -- Espera o HumanoidRootPart
        local rootPart = character:WaitForChild("HumanoidRootPart")

        -- Faz o teleporte
        rootPart.CFrame = teleportCFrame

        -- (Opcional) Notifica√ß√£o
        ShowNotification("TP EGGS", "Teleported to the Eggs!")
    end
})


Tabs.Teleport:AddSection("GARDENS")
Tabs.Teleport:AddButton({
    Title = "TP GARDEN 1",
    Description = "",
    Callback = function()
        -- CFrame com rota√ß√£o muito leve (quase zero), ajustado corretamente
        local teleportCFrame = CFrame.new(33.371002197265625, 2.999999761581421, -64.72699737548828) * CFrame.Angles(0, 0, 0)

        local Players = game:GetService("Players")
        local player = Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()

        local rootPart = character:WaitForChild("HumanoidRootPart")

        rootPart.CFrame = teleportCFrame

        -- (Opcional) Notifica√ß√£o
        ShowNotification("TP GARDEN 1", "Teleported to Garden 1!")
    end
})

Tabs.Teleport:AddButton({
    Title = "TP GARDEN 2",
    Description = "",
    Callback = function()
        -- Usando apenas posi√ß√£o, sem virar de cabe√ßa pra baixo
        local teleportCFrame = CFrame.new(34.14958953857422, 2.999999761581421, 37.72214126586914)

        local Players = game:GetService("Players")
        local player = Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()

        local rootPart = character:WaitForChild("HumanoidRootPart")

        rootPart.CFrame = teleportCFrame

        -- (Opcional) Notifica√ß√£o
        ShowNotification("TP GARDEN 2", "Teleported to Garden 2!")
    end
})

Tabs.Teleport:AddButton({
    Title = "TP GARDEN 3",
    Description = "",
    Callback = function()
        -- Apenas posi√ß√£o (rota√ß√£o insignificante foi ignorada)
        local teleportCFrame = CFrame.new(-99.94257354736328, 2.999999761581421, -63.53337478637695)

        local Players = game:GetService("Players")
        local player = Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()

        local rootPart = character:WaitForChild("HumanoidRootPart")

        rootPart.CFrame = teleportCFrame

        -- (Opcional) Notifica√ß√£o
        ShowNotification("TP GARDEN 3", "Teleported to Garden 3!")
    end
})

Tabs.Teleport:AddButton({
    Title = "TP GARDEN 4",
    Description = "",
    Callback = function()
        -- Apenas posi√ß√£o (evitando rota√ß√£o que vira o personagem de cabe√ßa para baixo)
        local teleportCFrame = CFrame.new(-101.57278442382812, 2.999999761581421, 34.84698486328125)

        local Players = game:GetService("Players")
        local player = Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()

        local rootPart = character:WaitForChild("HumanoidRootPart")

        rootPart.CFrame = teleportCFrame

        -- (Opcional) Notifica√ß√£o
        ShowNotification("TP GARDEN 4", "Teleported to Garden 4!")
    end
})

Tabs.Teleport:AddButton({
    Title = "TP GARDEN 5",
    Description = "",
    Callback = function()
        -- Apenas posi√ß√£o (rota√ß√£o √© irrelevante, ent√£o foi ignorada)
        local teleportCFrame = CFrame.new(-235.72276306152344, 2.999999761581421, -66.48868560791016)

        local Players = game:GetService("Players")
        local player = Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()

        local rootPart = character:WaitForChild("HumanoidRootPart")

        rootPart.CFrame = teleportCFrame

        -- (Opcional) Notifica√ß√£o
        ShowNotification("TP GARDEN 5", "Teleported to Garden 5!")
    end
})

Tabs.Teleport:AddButton({
    Title = "TP GARDEN 6",
    Description = "",
    Callback = function()
        -- Apenas posi√ß√£o (sem virar o personagem de cabe√ßa pra baixo)
        local teleportCFrame = CFrame.new(-236.28639221191406, 2.999999761581421, 36.294883728027344)

        local Players = game:GetService("Players")
        local player = Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()

        local rootPart = character:WaitForChild("HumanoidRootPart")

        rootPart.CFrame = teleportCFrame

        -- (Opcional) Notifica√ß√£o
        ShowNotification("TP GARDEN 6", "Teleported to Garden 6!")
    end
})

Tabs.Shop:AddSection("SEED SHOP")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local BuySeedEvent = ReplicatedStorage.GameEvents.BuySeedStock

-- Lista oficial de sementes/frutas
local fruits = {
    "Carrot", "Strawberry", "Blueberry", "Orange Tulip", "Tomato",
    "Corn", "Daffodil", "Watermelon", "Pumpkin", "Apple",
    "Bamboo", "Coconut", "Cactus", "Dragon Fruit", "Mango",
    "Grape", "Mushroom", "Pepper", "Cacao", "Beanstalk",
    "Ember Lily", "Sugar Apple"
}

-- Dropdown na aba Shop
local Dropdown_AutoBuySeeds = Tabs.Shop:AddDropdown("Dropdown_AutoBuySeeds", {
    Title = "Select Seeds to Auto-Buy",
    Description = "",
    Values = fruits,
    Multi = true,
    Default = {"Carrot", "Strawberry"}
})

-- Armazenamento das frutas selecionadas
local SelectedFruits = {}

Dropdown_AutoBuySeeds:OnChanged(function(Value)
    SelectedFruits = {}
    for fruitName, isSelected in next, Value do
        if isSelected then
            table.insert(SelectedFruits, fruitName)
        end
    end
end)

-- Toggle na aba Shop
local Toggle_AutoBuySeeds = Tabs.Shop:AddToggle("Toggle_AutoBuySeeds", {
    Title = "Auto Buy Seeds",
    Default = false
})

Toggle_AutoBuySeeds:OnChanged(function()
    _G.autoBuySeeds = Toggle_AutoBuySeeds.Value
end)

Options.Toggle_AutoBuySeeds:SetValue(false)

-- Loop superleve e sem delay com Heartbeat (ideal pra SB)
RunService.Heartbeat:Connect(function()
    if _G.autoBuySeeds and #SelectedFruits > 0 then
        pcall(function()
            for _, fruitName in pairs(SelectedFruits) do
                BuySeedEvent:FireServer(fruitName)
                -- sem delay
            end
        end)
    end
end)


Tabs.Shop:AddSection("GEAR SHOP")

local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local BuyGearEvent = ReplicatedStorage.GameEvents.BuyGearStock

-- Lista de Gears dispon√≠veis
local gears = {
    "Watering Can", "Trowel", "Recall Wrench", "Basic Sprinkler",
    "Advanced Sprinkler", "Godly Sprinkler", "Magnifying Glass", "Tanning Mirror",
    "Master Sprinkler", "Cleaning Spray", "Favourite Tool", "Harvest Tool", "Friendship Pot"
}

-- Dropdown de gears na aba Shop
local Dropdown_AutoBuyGear = Tabs.Shop:AddDropdown("Dropdown_AutoBuyGear", {
    Title = "Select Gears to Auto-Buy",
    Description = "",
    Values = gears,
    Multi = true,
    Default = {"Watering Can", "Trowel"}
})

-- Lista das gears selecionadas
local SelectedGears = {}

Dropdown_AutoBuyGear:OnChanged(function(Value)
    SelectedGears = {}
    for gearName, isSelected in next, Value do
        if isSelected then
            table.insert(SelectedGears, gearName)
        end
    end
end)

-- Toggle para auto buy gears
local Toggle_AutoBuyGear = Tabs.Shop:AddToggle("Toggle_AutoBuyGear", {
    Title = "Auto Buy Gear",
    Default = false
})

Toggle_AutoBuyGear:OnChanged(function()
    _G.autoBuyGear = Toggle_AutoBuyGear.Value
end)

Options.Toggle_AutoBuyGear:SetValue(false)

-- Loop superleve e r√°pido com Heartbeat
RunService.Heartbeat:Connect(function()
    if _G.autoBuyGear and #SelectedGears > 0 then
        pcall(function()
            for _, gearName in pairs(SelectedGears) do
                BuyGearEvent:FireServer(gearName)
                -- sem delay
            end
        end)
    end
end)


local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local VirtualUser = game:GetService("VirtualUser")
local Player = Players.LocalPlayer

-- UI de prote√ß√£o AFK
local function showAFKProtectionUI()
    if Player:FindFirstChild("PlayerGui"):FindFirstChild("AFKProtectionGui") then return end

    local screenGui = Instance.new("ScreenGui", Player:WaitForChild("PlayerGui"))
    screenGui.Name = "AFKProtectionGui"
    screenGui.ResetOnSpawn = false

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0, 200, 0, 40)
    label.Position = UDim2.new(0.5, -100, 0, 50)
    label.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    label.BorderColor3 = Color3.new(1, 1, 1)
    label.BorderSizePixel = 2
    label.BackgroundTransparency = 0.3
    label.Text = "üõ°Ô∏è AFK Protection ON"
    label.TextColor3 = Color3.fromRGB(0, 255, 0)
    label.Font = Enum.Font.GothamBold
    label.TextSize = 18
    label.Parent = screenGui
end

-- Remover UI quando desativar
local function hideAFKProtectionUI()
    local ui = Player:FindFirstChild("PlayerGui"):FindFirstChild("AFKProtectionGui")
    if ui then
        ui:Destroy()
    end
end

-- Toggle
local Toggle_AutoBuyGear = Tabs.Settings:AddToggle("Toggle_AutoBuyGear", {
    Title = "Auto Buy Gear",
    Default = false
})

Toggle_AutoBuyGear:OnChanged(function(state)
    _G.autoBuyGear = state
    _G.antiAFK = state

    if state then
        showAFKProtectionUI()
    else
        hideAFKProtectionUI()
    end
end)

Options.Toggle_AutoBuyGear:SetValue(false)

-- Anti-AFK completo
Player.Idled:Connect(function()
    if _G.antiAFK then
        VirtualUser:Button2Down(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
        task.wait(1)
        VirtualUser:Button2Up(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
        print("‚úÖ Anti-AFK acionado")
    end
end)

-- Loop superleve para auto buy
RunService.Heartbeat:Connect(function()
    if _G.autoBuyGear and #SelectedGears > 0 then
        pcall(function()
            for _, gearName in pairs(SelectedGears) do
                BuyGearEvent:FireServer(gearName)
            end
        end)
    end
end)

local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local BuyPetEggEvent = ReplicatedStorage.GameEvents.BuyPetEgg

-- ü•ö Toggle para comprar todos os ovos automaticamente
local Toggle_BuyAllEggs = Tabs.Shop:AddToggle("Toggle_BuyAllEggs", {
    Title = "Buy All Eggs",
    Description = "",
    Default = false
})

Toggle_BuyAllEggs:OnChanged(function()
    _G.buyAllEggs = Toggle_BuyAllEggs.Value
end)

-- üîÅ Loop sem delay, sem lag, usando Heartbeat
RunService.Heartbeat:Connect(function()
    if _G.buyAllEggs then
        pcall(function()
            BuyPetEggEvent:FireServer(1)
            BuyPetEggEvent:FireServer(2)
            BuyPetEggEvent:FireServer(3)
        end)
    end
end)

-- Addons:
-- SaveManager (Allows you to have a configuration system)
-- InterfaceManager (Allows you to have a interface managment system)

-- Hand the library over to our managers
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

-- Ignore keys that are used by ThemeManager.
-- (we dont want configs to save themes, do we?)
SaveManager:IgnoreThemeSettings()

-- You can add indexes of elements the save manager should ignore
SaveManager:SetIgnoreIndexes({})

-- use case for doing it this way:
-- a script hub could have themes in a global folder
-- and game configs in a separate folder per game
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")

InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)


Window:SelectTab(1)

Fluent:Notify({
    Title = "WENDELX",
    Content = "The script has been loaded.",
    Duration = 8
})

-- You can use the SaveManager:LoadAutoloadConfig() to load a config
-- which has been marked to be one that auto loads!
SaveManager:LoadAutoloadConfig()
